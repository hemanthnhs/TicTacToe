[{"/Users/hemanthnhs/Documents/Projects/tic_tac_toe/src/index.js":"1","/Users/hemanthnhs/Documents/Projects/tic_tac_toe/src/App.js":"2","/Users/hemanthnhs/Documents/Projects/tic_tac_toe/src/reportWebVitals.js":"3","/Users/hemanthnhs/Documents/Projects/tic_tac_toe/src/components/Board.js":"4","/Users/hemanthnhs/Documents/Projects/tic_tac_toe/src/components/Button.js":"5","/Users/hemanthnhs/Documents/Projects/tic_tac_toe/src/components/GameStatus.js":"6"},{"size":288,"mtime":1611532985565,"results":"7","hashOfConfig":"8"},{"size":4082,"mtime":1611691316219,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":1611532633659,"results":"10","hashOfConfig":"8"},{"size":678,"mtime":1611643982037,"results":"11","hashOfConfig":"8"},{"size":493,"mtime":1611644023952,"results":"12","hashOfConfig":"8"},{"size":667,"mtime":1611792471046,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"rfp46k",{"filePath":"17","messages":"18","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"16"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"16"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/hemanthnhs/Documents/Projects/tic_tac_toe/src/index.js",[],["29","30"],"/Users/hemanthnhs/Documents/Projects/tic_tac_toe/src/App.js",["31","32"],"import \"./App.css\";\nimport { useState } from \"react\";\nimport { CaretRightOutlined } from \"@ant-design/icons\";\nimport Board from \"./components/Board\";\nimport GameStatus from \"./components/GameStatus\";\nimport { Layout, Row, Col } from \"antd\";\nconst { Header, Content, Footer } = Layout;\n\nconst App = () => {\n  let n = 3;\n  let btns = [];\n  for (let i = 0; i < n; i++) {\n    for (let j = 0; j < n; j++) {\n      btns.push({ id: i * n + j, player: null, winningTile: false });\n    }\n  }\n  const [buttons, setButtons] = useState(btns);\n  const [currentPlayer, setPlayerTurn] = useState(1);\n  const [winner, setWinner] = useState(null);\n  const [isModalVisible, setIsModalVisible] = useState(false);\n  const buttonClicked = (id) => {\n    if (!checkCompletion(id, currentPlayer)) {\n      setButtons(\n        buttons.map((b) => (b.id === id ? { ...b, player: currentPlayer } : b))\n      );\n      setPlayerTurn(currentPlayer === 1 ? 2 : 1);\n    }\n  };\n  const setWinningButtons = (wonButtons, id, currentPlayer) => {\n    setButtons(\n      buttons.map((b) =>\n        wonButtons.includes(b.id)\n          ? { ...b, winningTile: true, player: currentPlayer }\n          : b\n      )\n    );\n    setWinner(currentPlayer);\n  };\n  const checkCompletion = (id, currentPlayer) => {\n    let matchedButtons = [id];\n    //check horizontally\n    let start = Math.floor(id / n) * n;\n    let end = start + (n - 1);\n    for (let i = start; i <= end; i++) {\n      if (buttons[i].player === currentPlayer) {\n        matchedButtons.push(i);\n      }\n    }\n    if (matchedButtons.length >= n) {\n      setWinningButtons(matchedButtons, id, currentPlayer);\n      return true;\n    }\n    //check vertically\n    matchedButtons = [id];\n    start = id % n;\n    for (let i = start; i < btns.length; i = i + n) {\n      if (buttons[i].player === currentPlayer) {\n        matchedButtons.push(i);\n      }\n    }\n    if (matchedButtons.length >= n) {\n      setWinningButtons(matchedButtons, id, currentPlayer);\n      return true;\n    }\n    //check diagonal top left to right bottom\n    if (Math.floor(id / n) === id % n) {\n      //lies in diagonal\n      matchedButtons = [id];\n      for (let i = 0; i < n; i++) {\n        if (buttons[i * n + i].player === currentPlayer) {\n          matchedButtons.push(i * n + i);\n        }\n      }\n      if (matchedButtons.length >= n) {\n        setWinningButtons(matchedButtons, id, currentPlayer);\n        return true;\n      }\n    }\n    //check diagonal top right to left bottom\n    if (n - Math.floor(id / n) - 1 === id % n) {\n      //lies in diagonal\n      matchedButtons = [id];\n      for (let i = 0; i < n; i++) {\n        if (buttons[i * n + n - 1 - i].player === currentPlayer) {\n          matchedButtons.push(i * n + n - 1 - i);\n        }\n      }\n      if (matchedButtons.length >= n) {\n        setWinningButtons(matchedButtons, id, currentPlayer);\n        return true;\n      }\n    }\n    return false;\n  };\n  return (\n    <Layout className=\"layout\">\n      <Header>\n        <div className=\"logo\">Tic Tac Toe</div>\n      </Header>\n      <Row className=\"player-status\">\n        <Col\n          className={`player-name player-1 ${\n            currentPlayer === 1 ? \"player-active\" : \"player-inactive\"\n          }`}\n          span={12}\n        >\n          {currentPlayer === 1 ? <CaretRightOutlined /> : \" \"}\n          Player 1\n        </Col>\n        <Col\n          className={`player-name player-2 ${\n            currentPlayer === 2 ? \"player-active\" : \"player-inactive\"\n          }`}\n          span={12}\n        >\n          {currentPlayer === 2 ? <CaretRightOutlined /> : \" \"}\n          Player 2\n        </Col>\n      </Row>\n      <Content>\n        <div className=\"site-layout-content\">\n          <Board\n            buttonClicked={buttonClicked}\n            btns={buttons}\n            complete={winner != null}\n          />\n          <GameStatus currentPlayer={currentPlayer} winner={winner} />\n        </div>\n      </Content>\n      <Footer className=\"footer\">\n        <a href=\"https://hemanthnhs.github.io/\">Developed by Hemanth</a>\n      </Footer>\n    </Layout>\n  );\n};\n\nexport default App;\n","/Users/hemanthnhs/Documents/Projects/tic_tac_toe/src/reportWebVitals.js",[],"/Users/hemanthnhs/Documents/Projects/tic_tac_toe/src/components/Board.js",["33"],"import Button from \"./Button\";\nimport { Layout, Row, Col } from \"antd\";\n\nconst Board = ({ buttonClicked, btns, complete }) => {\n  const buttons = [];\n  for (let i = 0; i < 3; i++) {\n    let row = [];\n    for (let j = 0; j < 3; j++) {\n      row[j] = (\n        <Col>\n          <Button\n            key={i * 3 + j}\n            id={i * 3 + j}\n            buttonClicked={buttonClicked}\n            attrs={btns.filter((b) => b.id === i * 3 + j)[0]}\n            complete={complete}\n          />\n        </Col>\n      );\n    }\n    buttons[i] = (\n      <Row gutter={[10, 10]} justify=\"center\">\n        {row}\n      </Row>\n    );\n  }\n  return <div>{buttons}</div>;\n};\n\nexport default Board;\n","/Users/hemanthnhs/Documents/Projects/tic_tac_toe/src/components/Button.js",[],"/Users/hemanthnhs/Documents/Projects/tic_tac_toe/src/components/GameStatus.js",[],{"ruleId":"34","replacedBy":"35"},{"ruleId":"36","replacedBy":"37"},{"ruleId":"38","severity":1,"message":"39","line":20,"column":10,"nodeType":"40","messageId":"41","endLine":20,"endColumn":24},{"ruleId":"38","severity":1,"message":"42","line":20,"column":26,"nodeType":"40","messageId":"41","endLine":20,"endColumn":43},{"ruleId":"38","severity":1,"message":"43","line":2,"column":10,"nodeType":"40","messageId":"41","endLine":2,"endColumn":16},"no-native-reassign",["44"],"no-negated-in-lhs",["45"],"no-unused-vars","'isModalVisible' is assigned a value but never used.","Identifier","unusedVar","'setIsModalVisible' is assigned a value but never used.","'Layout' is defined but never used.","no-global-assign","no-unsafe-negation"]